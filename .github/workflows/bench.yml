name: Benchmarks

# In public repositories peter-evans/create-or-update-comment does not work in
# pull_request workflows when triggered by forks.
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/doc/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'
  bench-skylake-2x:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: [self-hosted, skylake-2x]
    steps:
      - uses: actions/checkout@v3.0.2
        # By default a merge commit is checked out. If you look at the SHA that
        # is checked out, it doesn't match your local commit SHA. Rather it's
        # the SHA of a merge commit (your branch + base branch). So for
        # pull_request actions it won't match the commit ID on the branch. This
        # is confusing for storing benchmark results because the commit ID we
        # find during `git rev-parse` exists nowhere in the history. Since we
        # don't do merge commits anyways, we make sure we check out the head
        # commit (which will exist in the history)s.
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Restore cache
        uses: Swatinem/rust-cache@v1

      # Find the PR associated with this push, if there is one. Note that this
      # is neede because `${{ github.event.pull_request.number }}` does not get
      # set on push requests.
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          state: open

      - name: Run Benchmarks
        run: |
          bash scripts/ci.bash

      # Find comment with benchmark info if it exists
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ steps.findPr.outputs.pr }}
          comment-author: 'github-actions[bot]'
          body-includes: Benchmark results

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ steps.findPr.outputs.pr }}
          body-file: nexmark_comment.txt
          edit-mode: replace
    env:
      CI_MACHINE_TYPE: "skylake-2x"
      PR_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
